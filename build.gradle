buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.70'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.8'
    id 'org.jetbrains.dokka' version '1.4.10.2'
}

apply plugin: 'com.github.johnrengelman.shadow'

group 'me.alexkovrigin.astrotool'
version '1.0-SNAPSHOT'
mainClassName = "me.alexkovrigin.astrotool.ViewerKt"

repositories {
    maven { url 'https://kotlin.bintray.com/kotlinx' }
    maven {url "http://download.osgeo.org/webdav/geotools/"}
    maven { url "https://repo.osgeo.org/repository/release/" }
    mavenCentral()
    mavenLocal()
    jcenter()
}

def geoToolsVersion = "20.5"

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "org.locationtech.jts:jts:1.16.1"
    implementation "org.locationtech.jts:jts-core:1.16.1"
    implementation "org.locationtech.jts:jts-io:1.16.1"
    implementation "org.locationtech.jts:jts-modules:1.16.1"
    implementation "com.google.code.gson:gson:2.2.4"
    implementation "com.github.nwillc:ksvg:3.0.0"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.10.1"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.11.+"
    implementation "org.json:json:20190722"
    implementation "org.geotools:gt-epsg-hsql:${geoToolsVersion}"
    implementation "org.geotools:gt-api:${geoToolsVersion}"
    implementation "io.jenetics:jpx:2.0.0"

    implementation "com.github.ajalt:clikt:2.7.1"
    implementation "me.tongfei:progressbar:0.8.1"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_version"
}

javafx {
    version = "14"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

test {
    useJUnitPlatform()
}

ext.build = (project.hasProperty('teamcity')) ? project.teamcity['build.number'] : 'local_build'
version = ext.build.replaceAll("(\\S+)\\s*.*", "\$1")

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.freeCompilerArgs += ["-Xuse-experimental=io.ktor.util.KtorExperimentalAPI"]
    kotlinOptions.jvmTarget = "11"
}

shadowJar {
    mergeServiceFiles()
    manifest {
        attributes 'Main-Class': mainClassName
    }
}
